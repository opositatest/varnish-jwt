name: CICD
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
env:
      DOCKERHUB_REPOSITORY: opositatest/varnish-jwt
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
    
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
    - name: Build
      run: docker-compose -f docker-compose.test.yml build
    - name: Run test
      run: docker-compose -f docker-compose.test.yml up --abort-on-container-exit

    - name: Get the version
      id: get_version
      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}

    - name: Build, tag and push image to Dockerhub
      env:
        VERSION: ${{ steps.get_version.outputs.version }}
      run: |
        docker build -t ${DOCKERHUB_REPOSITORY}:${VERSION} .
        docker push ${DOCKERHUB_REPOSITORY}:${VERSION}
    
    - uses: aws-actions/amazon-ecr-login@v1
      id: login-ecr
    - name: Build, tag and push image to Amazon ECR
      env:
        VERSION: ${{ steps.get_version.outputs.version }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${VERSION} .
        docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${VERSION}
